Graph is a linear data structure. It is not sequential.It is a connection of nodes and edges.
The terms of the Graphs are:
1. Terminologies
2. Representaion
3. Traversal
4. Graph algorithms


Graph has many types:
1. by Direction->
    1.Directed Graph
    2.Undirected Graph
2. by Weight->
    1.Weighted
    2.Unweighted
and others (directed Weighted , directed Unweighted, Undirected Weighted, Undirected Unweighted etc.)
special graph is tree.

Tree:
2 conditions->
1. connected
2. # E = # N -1
    number of edges = number of vertices - 1
    |E| = |N| - 1




There are many types of Representaion in Graph.
1. Adjacency matrix
2. Adjacency list
3. edges of list

Adjacency matrix:
it need N^2 but if we want to see any connection between any node we can easily find it in o(n). it is good for dense node.
Adjacency list:
it need less time but if we want to see any connection between any node we need to traverse all the list element . it is good for sparse( halka ) node. example : tree.
Adjacency list is come out when we have 10^5 nodes and need large number of array that can't sort out easily. then the list will help to do the work easily.
